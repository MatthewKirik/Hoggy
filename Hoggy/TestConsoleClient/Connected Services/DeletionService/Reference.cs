//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestConsoleClient.DeletionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DeletionService.IDeletionContract")]
    public interface IDeletionContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeletionContract/DeleteBoard", ReplyAction="http://tempuri.org/IDeletionContract/DeleteBoardResponse")]
        bool DeleteBoard(DataTransferObjects.AuthenticationToken token, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeletionContract/DeleteBoard", ReplyAction="http://tempuri.org/IDeletionContract/DeleteBoardResponse")]
        System.Threading.Tasks.Task<bool> DeleteBoardAsync(DataTransferObjects.AuthenticationToken token, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeletionContract/DeleteBoardTag", ReplyAction="http://tempuri.org/IDeletionContract/DeleteBoardTagResponse")]
        bool DeleteBoardTag(DataTransferObjects.AuthenticationToken token, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeletionContract/DeleteBoardTag", ReplyAction="http://tempuri.org/IDeletionContract/DeleteBoardTagResponse")]
        System.Threading.Tasks.Task<bool> DeleteBoardTagAsync(DataTransferObjects.AuthenticationToken token, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeletionContract/DeleteColumn", ReplyAction="http://tempuri.org/IDeletionContract/DeleteColumnResponse")]
        bool DeleteColumn(DataTransferObjects.AuthenticationToken token, int columnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeletionContract/DeleteColumn", ReplyAction="http://tempuri.org/IDeletionContract/DeleteColumnResponse")]
        System.Threading.Tasks.Task<bool> DeleteColumnAsync(DataTransferObjects.AuthenticationToken token, int columnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeletionContract/DeleteCard", ReplyAction="http://tempuri.org/IDeletionContract/DeleteCardResponse")]
        bool DeleteCard(DataTransferObjects.AuthenticationToken token, int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeletionContract/DeleteCard", ReplyAction="http://tempuri.org/IDeletionContract/DeleteCardResponse")]
        System.Threading.Tasks.Task<bool> DeleteCardAsync(DataTransferObjects.AuthenticationToken token, int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeletionContract/DeleteCardTag", ReplyAction="http://tempuri.org/IDeletionContract/DeleteCardTagResponse")]
        bool DeleteCardTag(DataTransferObjects.AuthenticationToken token, int cardId, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeletionContract/DeleteCardTag", ReplyAction="http://tempuri.org/IDeletionContract/DeleteCardTagResponse")]
        System.Threading.Tasks.Task<bool> DeleteCardTagAsync(DataTransferObjects.AuthenticationToken token, int cardId, int tagId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeletionContractChannel : TestConsoleClient.DeletionService.IDeletionContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletionContractClient : System.ServiceModel.ClientBase<TestConsoleClient.DeletionService.IDeletionContract>, TestConsoleClient.DeletionService.IDeletionContract {
        
        public DeletionContractClient() {
        }
        
        public DeletionContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeletionContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeletionContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeletionContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool DeleteBoard(DataTransferObjects.AuthenticationToken token, int boardId) {
            return base.Channel.DeleteBoard(token, boardId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBoardAsync(DataTransferObjects.AuthenticationToken token, int boardId) {
            return base.Channel.DeleteBoardAsync(token, boardId);
        }
        
        public bool DeleteBoardTag(DataTransferObjects.AuthenticationToken token, int tagId) {
            return base.Channel.DeleteBoardTag(token, tagId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBoardTagAsync(DataTransferObjects.AuthenticationToken token, int tagId) {
            return base.Channel.DeleteBoardTagAsync(token, tagId);
        }
        
        public bool DeleteColumn(DataTransferObjects.AuthenticationToken token, int columnId) {
            return base.Channel.DeleteColumn(token, columnId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteColumnAsync(DataTransferObjects.AuthenticationToken token, int columnId) {
            return base.Channel.DeleteColumnAsync(token, columnId);
        }
        
        public bool DeleteCard(DataTransferObjects.AuthenticationToken token, int cardId) {
            return base.Channel.DeleteCard(token, cardId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCardAsync(DataTransferObjects.AuthenticationToken token, int cardId) {
            return base.Channel.DeleteCardAsync(token, cardId);
        }
        
        public bool DeleteCardTag(DataTransferObjects.AuthenticationToken token, int cardId, int tagId) {
            return base.Channel.DeleteCardTag(token, cardId, tagId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCardTagAsync(DataTransferObjects.AuthenticationToken token, int cardId, int tagId) {
            return base.Channel.DeleteCardTagAsync(token, cardId, tagId);
        }
    }
}
