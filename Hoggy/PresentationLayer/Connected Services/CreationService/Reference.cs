//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PresentationLayer.CreationService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CreationService.ICreationContract")]
    public interface ICreationContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreationContract/AddBoard", ReplyAction="http://tempuri.org/ICreationContract/AddBoardResponse")]
        bool AddBoard(DataTransferObjects.AuthenticationToken token, DataTransferObjects.BoardDTO board);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreationContract/AddBoard", ReplyAction="http://tempuri.org/ICreationContract/AddBoardResponse")]
        System.Threading.Tasks.Task<bool> AddBoardAsync(DataTransferObjects.AuthenticationToken token, DataTransferObjects.BoardDTO board);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreationContract/AddColumn", ReplyAction="http://tempuri.org/ICreationContract/AddColumnResponse")]
        bool AddColumn(DataTransferObjects.AuthenticationToken token, DataTransferObjects.ColumnDTO column, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreationContract/AddColumn", ReplyAction="http://tempuri.org/ICreationContract/AddColumnResponse")]
        System.Threading.Tasks.Task<bool> AddColumnAsync(DataTransferObjects.AuthenticationToken token, DataTransferObjects.ColumnDTO column, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreationContract/AddTagToBoard", ReplyAction="http://tempuri.org/ICreationContract/AddTagToBoardResponse")]
        bool AddTagToBoard(DataTransferObjects.AuthenticationToken token, DataTransferObjects.TagDTO tag, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreationContract/AddTagToBoard", ReplyAction="http://tempuri.org/ICreationContract/AddTagToBoardResponse")]
        System.Threading.Tasks.Task<bool> AddTagToBoardAsync(DataTransferObjects.AuthenticationToken token, DataTransferObjects.TagDTO tag, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreationContract/AddCard", ReplyAction="http://tempuri.org/ICreationContract/AddCardResponse")]
        bool AddCard(DataTransferObjects.AuthenticationToken token, DataTransferObjects.CardDTO card, int columnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreationContract/AddCard", ReplyAction="http://tempuri.org/ICreationContract/AddCardResponse")]
        System.Threading.Tasks.Task<bool> AddCardAsync(DataTransferObjects.AuthenticationToken token, DataTransferObjects.CardDTO card, int columnId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICreationContractChannel : PresentationLayer.CreationService.ICreationContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreationContractClient : System.ServiceModel.ClientBase<PresentationLayer.CreationService.ICreationContract>, PresentationLayer.CreationService.ICreationContract {
        
        public CreationContractClient() {
        }
        
        public CreationContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CreationContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreationContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreationContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddBoard(DataTransferObjects.AuthenticationToken token, DataTransferObjects.BoardDTO board) {
            return base.Channel.AddBoard(token, board);
        }
        
        public System.Threading.Tasks.Task<bool> AddBoardAsync(DataTransferObjects.AuthenticationToken token, DataTransferObjects.BoardDTO board) {
            return base.Channel.AddBoardAsync(token, board);
        }
        
        public bool AddColumn(DataTransferObjects.AuthenticationToken token, DataTransferObjects.ColumnDTO column, int boardId) {
            return base.Channel.AddColumn(token, column, boardId);
        }
        
        public System.Threading.Tasks.Task<bool> AddColumnAsync(DataTransferObjects.AuthenticationToken token, DataTransferObjects.ColumnDTO column, int boardId) {
            return base.Channel.AddColumnAsync(token, column, boardId);
        }
        
        public bool AddTagToBoard(DataTransferObjects.AuthenticationToken token, DataTransferObjects.TagDTO tag, int boardId) {
            return base.Channel.AddTagToBoard(token, tag, boardId);
        }
        
        public System.Threading.Tasks.Task<bool> AddTagToBoardAsync(DataTransferObjects.AuthenticationToken token, DataTransferObjects.TagDTO tag, int boardId) {
            return base.Channel.AddTagToBoardAsync(token, tag, boardId);
        }
        
        public bool AddCard(DataTransferObjects.AuthenticationToken token, DataTransferObjects.CardDTO card, int columnId) {
            return base.Channel.AddCard(token, card, columnId);
        }
        
        public System.Threading.Tasks.Task<bool> AddCardAsync(DataTransferObjects.AuthenticationToken token, DataTransferObjects.CardDTO card, int columnId) {
            return base.Channel.AddCardAsync(token, card, columnId);
        }
    }
}
