//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PresentationLayer.InteractionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InteractionService.IInteractionContract")]
    public interface IInteractionContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInteractionContract/MoveCard", ReplyAction="http://tempuri.org/IInteractionContract/MoveCardResponse")]
        bool MoveCard(DataTransferObjects.AuthenticationToken token, int cardId, int destinationColumnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInteractionContract/MoveCard", ReplyAction="http://tempuri.org/IInteractionContract/MoveCardResponse")]
        System.Threading.Tasks.Task<bool> MoveCardAsync(DataTransferObjects.AuthenticationToken token, int cardId, int destinationColumnId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInteractionContractChannel : PresentationLayer.InteractionService.IInteractionContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InteractionContractClient : System.ServiceModel.ClientBase<PresentationLayer.InteractionService.IInteractionContract>, PresentationLayer.InteractionService.IInteractionContract {
        
        public InteractionContractClient() {
        }
        
        public InteractionContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InteractionContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InteractionContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InteractionContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool MoveCard(DataTransferObjects.AuthenticationToken token, int cardId, int destinationColumnId) {
            return base.Channel.MoveCard(token, cardId, destinationColumnId);
        }
        
        public System.Threading.Tasks.Task<bool> MoveCardAsync(DataTransferObjects.AuthenticationToken token, int cardId, int destinationColumnId) {
            return base.Channel.MoveCardAsync(token, cardId, destinationColumnId);
        }
    }
}
