//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PresentationLayer.NotificationService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NotificationService.INotificationContract", CallbackContract=typeof(PresentationLayer.NotificationService.INotificationContractCallback))]
    public interface INotificationContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/Subscribe", ReplyAction="http://tempuri.org/INotificationContract/SubscribeResponse")]
        bool Subscribe(DataTransferObjects.AuthenticationToken token, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/Subscribe", ReplyAction="http://tempuri.org/INotificationContract/SubscribeResponse")]
        System.Threading.Tasks.Task<bool> SubscribeAsync(DataTransferObjects.AuthenticationToken token, int boardId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificationContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/OnBoardAdded", ReplyAction="http://tempuri.org/INotificationContract/OnBoardAddedResponse")]
        void OnBoardAdded(DataTransferObjects.BoardDTO board);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/OnParticipatedBoardAdded", ReplyAction="http://tempuri.org/INotificationContract/OnParticipatedBoardAddedResponse")]
        void OnParticipatedBoardAdded(DataTransferObjects.BoardDTO board);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/OnParticipantAdded", ReplyAction="http://tempuri.org/INotificationContract/OnParticipantAddedResponse")]
        void OnParticipantAdded(DataTransferObjects.UserDTO user, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/OnColumnAdded", ReplyAction="http://tempuri.org/INotificationContract/OnColumnAddedResponse")]
        void OnColumnAdded(DataTransferObjects.ColumnDTO column, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/OnBoardTagAdded", ReplyAction="http://tempuri.org/INotificationContract/OnBoardTagAddedResponse")]
        void OnBoardTagAdded(DataTransferObjects.TagDTO tag, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/OnCardTagAdded", ReplyAction="http://tempuri.org/INotificationContract/OnCardTagAddedResponse")]
        void OnCardTagAdded(int tagId, int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/OnHistoryEventAdded", ReplyAction="http://tempuri.org/INotificationContract/OnHistoryEventAddedResponse")]
        void OnHistoryEventAdded(DataTransferObjects.HistoryEventDTO historyEvent, int boardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/OnCardAdded", ReplyAction="http://tempuri.org/INotificationContract/OnCardAddedResponse")]
        void OnCardAdded(DataTransferObjects.CardDTO card, int columnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/OnCardSubscribersAdded", ReplyAction="http://tempuri.org/INotificationContract/OnCardSubscribersAddedResponse")]
        void OnCardSubscribersAdded(DataTransferObjects.UserDTO user, int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationContract/OnCardCommentAdded", ReplyAction="http://tempuri.org/INotificationContract/OnCardCommentAddedResponse")]
        void OnCardCommentAdded(DataTransferObjects.CommentDTO comment, int cardId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificationContractChannel : PresentationLayer.NotificationService.INotificationContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificationContractClient : System.ServiceModel.DuplexClientBase<PresentationLayer.NotificationService.INotificationContract>, PresentationLayer.NotificationService.INotificationContract {
        
        public NotificationContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public NotificationContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public NotificationContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Subscribe(DataTransferObjects.AuthenticationToken token, int boardId) {
            return base.Channel.Subscribe(token, boardId);
        }
        
        public System.Threading.Tasks.Task<bool> SubscribeAsync(DataTransferObjects.AuthenticationToken token, int boardId) {
            return base.Channel.SubscribeAsync(token, boardId);
        }
    }
}
