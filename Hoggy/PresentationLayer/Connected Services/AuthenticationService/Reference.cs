//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PresentationLayer.AuthenticationService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthenticationService.IAuthenticationContract")]
    public interface IAuthenticationContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationContract/CheckUserIsRegistered", ReplyAction="http://tempuri.org/IAuthenticationContract/CheckUserIsRegisteredResponse")]
        bool CheckUserIsRegistered(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationContract/CheckUserIsRegistered", ReplyAction="http://tempuri.org/IAuthenticationContract/CheckUserIsRegisteredResponse")]
        System.Threading.Tasks.Task<bool> CheckUserIsRegisteredAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationContract/CheckPasswordIsCorrect", ReplyAction="http://tempuri.org/IAuthenticationContract/CheckPasswordIsCorrectResponse")]
        bool CheckPasswordIsCorrect(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationContract/CheckPasswordIsCorrect", ReplyAction="http://tempuri.org/IAuthenticationContract/CheckPasswordIsCorrectResponse")]
        System.Threading.Tasks.Task<bool> CheckPasswordIsCorrectAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationContract/Login", ReplyAction="http://tempuri.org/IAuthenticationContract/LoginResponse")]
        DataTransferObjects.AuthenticationToken Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationContract/Login", ReplyAction="http://tempuri.org/IAuthenticationContract/LoginResponse")]
        System.Threading.Tasks.Task<DataTransferObjects.AuthenticationToken> LoginAsync(string email, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationContractChannel : PresentationLayer.AuthenticationService.IAuthenticationContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationContractClient : System.ServiceModel.ClientBase<PresentationLayer.AuthenticationService.IAuthenticationContract>, PresentationLayer.AuthenticationService.IAuthenticationContract {
        
        public AuthenticationContractClient() {
        }
        
        public AuthenticationContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckUserIsRegistered(string email) {
            return base.Channel.CheckUserIsRegistered(email);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserIsRegisteredAsync(string email) {
            return base.Channel.CheckUserIsRegisteredAsync(email);
        }
        
        public bool CheckPasswordIsCorrect(string email, string password) {
            return base.Channel.CheckPasswordIsCorrect(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> CheckPasswordIsCorrectAsync(string email, string password) {
            return base.Channel.CheckPasswordIsCorrectAsync(email, password);
        }
        
        public DataTransferObjects.AuthenticationToken Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<DataTransferObjects.AuthenticationToken> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
    }
}
